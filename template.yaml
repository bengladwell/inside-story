AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  inside-story built with SAM

Resources:
  HostingS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: inside-story
  HostingIdentity:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: Inside Story static assets
  HostingDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
          - DomainName: !GetAtt HostingS3Bucket.DomainName
            Id: S3-inside-story
            S3OriginConfig:
              OriginAccessIdentity: !Sub 'origin-access-identity/cloudfront/${HostingIdentity}'
        Enabled: True
        DefaultCacheBehavior:
          AllowedMethods:
            - HEAD
            - GET
          TargetOriginId: S3-inside-story
          ViewerProtocolPolicy: redirect-to-https
          ForwardedValues:
            QueryString: True
        ViewerCertificate:
          CloudFrontDefaultCertificate: True
        DefaultRootObject: index.html
        PriceClass: PriceClass_100
  UserPool:
    Type : AWS::Cognito::UserPool
    Properties:
      UserPoolName: Inside Story
      UsernameAttributes:
        - email
      UsernameConfiguration:
        CaseSensitive: False
    # TODO: Looks like I should create an app client
  # TODO: looks like I need an identity pool that is linked to the UserPool and client
    # Actually; may not even need that UserPool. Will only need it if actually storing user data there. Could store it
    #   a "simple table", or directly from Facebook. (maybe the simple table just has the list of approved users)
    # The identity pool will also need two new roles, one for authenticated, one for unauthenticated
    # Not sure what the authenticated one will need access to yet
